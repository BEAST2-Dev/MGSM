<beast version='2.0'
       namespace='beast.app.beauti:beast.pkgmgmt:beast.base.core:beast.base.inference:beast.base.evolution.branchratemodel:beast.base.evolution.speciation:beast.base.evolution.tree.coalescent:beast.pkgmgmt:beast.base.core:beast.base.inference.util:beast.evolution.nuc:beast.base.evolution.operator:beast.base.inference.operator:beast.base.evolution.sitemodel:beast.base.evolution.substitutionmodel:beast.base.evolution.likelihood:beast.evolution:beast.base.math.distributions'>

    <mergewith point='substModelTemplates'>

        <!-- site models -->
        
        <!-- multi gamma site model -->
        <subtemplate id='Multi-Gamma Site Model' class='mgsm.evolution.sitemodel.MultiGammaSiteModel' mainid='MultiGammaSiteModel.s:$(n)'>
            <![CDATA[
            <plugin spec='mgsm.evolution.sitemodel.MultiGammaSiteModel' id="MultiGammaSiteModel.s:$(n)" gammaCategoryCount='4'>
                <!--substModel will be automatically detected /-->
                <proportionInvariant spec='parameter.RealParameter' id='MGSMproportionInvariant.s:$(n)' value='0.1' lower='0' upper='1' estimate='true'/>
                <mutationRate        spec='parameter.RealParameter' id='MGSMMutationRate.s:$(n)' value='1.0'        estimate='false'/>
                <shapes              spec='parameter.RealParameter' id='MGSMgammaShape.s:$(n)' value='1.0'         estimate='true'/>
            </plugin>
	    	        
            <prior id='MGSMMutationRatePrior.s:$(n)' x='@MGSMMutationRate.s:$(n)'><distr spec="OneOnX"/></prior>
            <prior id='MGSMGammaShapePrior.s:$(n)' x='@MGSMgammaShape.s:$(n)'><distr spec="beast.base.inference.distribution.Exponential" mean='1'/></prior>

            <operator id='MGSMproportionInvariantScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@MGSMproportionInvariant.s:$(n)"/>
            <operator id='MGSMMutationRateScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@MGSMMutationRate.s:$(n)"/>
            <operator id='MGSMgammaShapeScaler1.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="5.0" parameter="@MGSMgammaShape.s:$(n)" scaleAll="false"/>
            <operator id='MGSMgammaShapeScaler2.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.5" parameter="@MGSMgammaShape.s:$(n)" scaleAll="true"/>

            <distribution id='MGSMMultiGammaSiteModelPrior.s:$(n)' spec="mgsm.evolution.sitemodel.MultiGammaSiteModelPrior" shapes="@MGSMgammaShape.s:$(n)" tree="@Tree.t:$(n)"/>
            ]]>

            <connect srcID='MGSMMutationRatePrior.s:$(n)'         targetID='prior' inputName='distribution' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(MGSMMutationRate.s:$(n)) and MGSMMutationRate.s:$(n)/estimate=true'/>


            <connect srcID='MGSMproportionInvariant.s:$(n)'       targetID='state' inputName='stateNode' if='inlikelihood(MGSMproportionInvariant.s:$(n)) and MGSMproportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='MGSMMutationRate.s:$(n)'              targetID='state' inputName='stateNode' if='inlikelihood(MGSMMutationRate.s:$(n)) and MGSMMutationRate.s:$(n)/estimate=true'/>
            <connect srcID='MGSMgammaShape.s:$(n)'                targetID='state' inputName='stateNode' if='inlikelihood(MGSMgammaShape.s:$(n)) and MGSMgammaShape.s:$(n)/estimate=true'/>

            <connect srcID='MGSMproportionInvariantScaler.s:$(n)' targetID='mcmc' inputName='operator' if='inlikelihood(MGSMproportionInvariant.s:$(n)) and MGSMproportionInvariant.s:$(n)/estimate=true'>Scales proportion of invariant sites parameter of partition $(n)</connect>
            <connect srcID='MGSMMutationRateScaler.s:$(n)'        targetID='mcmc' inputName='operator' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(MGSMMutationRate.s:$(n)) and MGSMMutationRate.s:$(n)/estimate=true'>Scales mutation rate of partition s:$(n)</connect>
            <connect srcID='MGSMgammaShapeScaler1.s:$(n)'         targetID='mcmc' inputName='operator' if='inlikelihood(MGSMgammaShape.s:$(n)) and MGSMgammaShape.s:$(n)/estimate=true'>Scales gamma shape parameter of partition s:$(n)</connect>
            <connect srcID='MGSMgammaShapeScaler2.s:$(n)'         targetID='mcmc' inputName='operator' if='inlikelihood(MGSMgammaShape.s:$(n)) and MGSMgammaShape.s:$(n)/estimate=true'>Scales gamma shape parameter of partition s:$(n)</connect>

            <connect srcID='MGSMproportionInvariant.s:$(n)'       targetID='tracelog' inputName='log' if='inposterior(MGSMproportionInvariant.s:$(n)) and MGSMproportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='MGSMMutationRate.s:$(n)'              targetID='tracelog' inputName='log' if='inlikelihood(MGSMMutationRate.s:$(n)) and MGSMMutationRate.s:$(n)/estimate=true'/>
            <connect srcID='MGSMgammaShape.s:$(n)'                targetID='tracelog' inputName='log' if='inlikelihood(MGSMgammaShape.s:$(n)) and MGSMgammaShape.s:$(n)/estimate=true'/>


            <connect srcID='MGSMMultiGammaSiteModelPrior.s.s:$(n)'    targetID='prior' inputName='distribution' if='inlikelihood(MGSMgammaShape.s:$(n))'>Prior on gamma shape for partition s:$(n)</connect>
            <connect srcID='MGSMGammaShapePrior.s:$(n)'           targetID='prior' inputName='distribution' if='inlikelihood(MGSMgammaShape.s:$(n)) and MGSMgammaShape.s:$(n)/estimate=true'>Prior on gamma shape for partition s:$(n)</connect>
            <connect srcID='MGSMPropInvariantPrior.s:$(n)'        targetID='prior' inputName='distribution' if='inlikelihood(MGSMproportionInvariant.s:$(n)) and MGSMproportionInvariant.s:$(n)/estimate=true'>Prior on proportion invariant for partition s:$(n)</connect>

            <connect srcID='MGSMgammaShape.s:$(n)'                targetID='TreeWithMetaDataLogger.t:$(n)' inputName='metadata' if='inlikelihood(MultiGammaSiteModel.s:$(n))'/>
        </subtemplate>


        <!-- relaxed gamma site model -->
        <subtemplate id='Relaxed Gamma Site Model' class='mgsm.evolution.sitemodel.RelaxedGammaSiteModel' mainid='RelaxedGammaSiteModel.s:$(n)'
        suppressInputs='mgsm.evolution.sitemodel.RelaxedGammaSiteModel.tree,
        mgsm.evolution.sitemodel.RelaxedGammaSiteModel.distr,
        mgsm.evolution.sitemodel.RelaxedGammaSiteModel.rateCategories,
        mgsm.evolution.sitemodel.RelaxedGammaSiteModel.shape
        '>
            <![CDATA[
            

            <parameter id="RGSMucldMeanGamma.s:$(n)" name="stateNode">1.0</parameter>
            <parameter id="RGSMucldStdevGamma.s:$(n)" lower="0.0" name="stateNode" upper="5.0">0.5</parameter>
            <stateNode dimension="100" id="RGSMrateCategoriesGamma.s:$(n)" spec="parameter.IntegerParameter" value="1"/>
            
            <plugin spec='mgsm.evolution.sitemodel.RelaxedGammaSiteModel' id="RelaxedGammaSiteModel.s:$(n)" gammaCategoryCount='4' rateCategories="@RGSMrateCategoriesGamma.s:$(n)" tree="@Tree.t:$(n)">
                <!--substModel will be automatically detected /-->
                <proportionInvariant spec='parameter.RealParameter' id='RGSMproportionInvariant.s:$(n)' value='0.1' lower='0' upper='1' estimate='true'/>
                <mutationRate        spec='parameter.RealParameter' id='RGSMmutationRate.s:$(n)' value='1.0'        estimate='false'/>
                <LogNormal id="LogNormalDistributionModelGamma.c:atpB_3" name="distr" S="@RGSMucldStdevGamma.s:$(n)" M="@RGSMucldMeanGamma.s:$(n)" meanInRealSpace="true"/>
            </plugin>
	    	        
            <prior id='RGSMMutationRatePrior.s:$(n)' x='@RGSMmutationRate.s:$(n)'><distr spec="OneOnX"/></prior>
            <prior id='RGSMMeanPrior.s:$(n)' x='@RGSMucldMeanGamma.s:$(n)'><distr spec="beast.base.inference.distribution.Exponential" mean='1'/></prior>
            <prior id='RGSMStdDevPrior.s:$(n)' x='@RGSMucldStdevGamma.s:$(n)'><distr spec="beast.base.inference.distribution.Exponential" mean='0.33'/></prior>

            <operator id='RGSMproportionInvariantScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@RGSMproportionInvariant.s:$(n)"/>
            <operator id='RGSMmutationRateScaler.s:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="0.1" parameter="@RGSMmutationRate.s:$(n)"/>

            <operator id="RGSMucldMeanGammaScaler.s:$(n)" spec="ScaleOperator" parameter="@RGSMucldMeanGamma.s:$(n)" scaleFactor="0.5" weight="1.0"/>
            <operator id="RGSMucldStdevGammaScaler.s:$(n)" spec="ScaleOperator" parameter="@RGSMucldStdevGamma.s:$(n)" scaleFactor="0.5" weight="3.0"/>
            <operator id="RGSMCategoriesRandomWalkGamma.s:$(n)" spec="IntRandomWalkOperator" parameter="@RGSMrateCategoriesGamma.s:$(n)" weight="10.0" windowSize="1"/>
            <operator id="RGSMCategoriesSwapGammaOperator.s:$(n)" spec="SwapOperator" intparameter="@RGSMrateCategoriesGamma.s:$(n)" weight="10.0"/>
            <operator id="RGSMCategoriesUniformGamma.s:$(n)" spec="UniformOperator" parameter="@RGSMrateCategoriesGamma.s:$(n)" weight="10.0"/>

            <distribution id='RelaxedGammaSiteModelPrior.s:$(n)' spec="mgsm.evolution.sitemodel.MultiGammaSiteModelPrior" shapes="@RGSMrateCategoriesGamma.s:$(n)" tree="@Tree.t:$(n)"/>
            ]]>

            <connect srcID='RGSMMutationRatePrior.s:$(n)'           targetID='prior' inputName='distribution' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(RGSMmutationRate.s:$(n)) and RGSMmutationRate.s:$(n)/estimate=true'/>

            <connect srcID='RGSMproportionInvariant.s:$(n)'         targetID='state' inputName='stateNode' if='inlikelihood(RGSMproportionInvariant.s:$(n)) and RGSMproportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='RGSMmutationRate.s:$(n)'                targetID='state' inputName='stateNode' if='inlikelihood(RGSMmutationRate.s:$(n)) and RGSMmutationRate.s:$(n)/estimate=true'/>
            <connect srcID='RGSMucldMeanGamma.s:$(n)'               targetID='state' inputName='stateNode' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>
            <connect srcID='RGSMucldStdevGamma.s:$(n)'              targetID='state' inputName='stateNode' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>
            <connect srcID='RGSMrateCategoriesGamma.s:$(n)'         targetID='state' inputName='stateNode' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>

            <connect srcID='RelaxedGammaSiteModelPrior.s:$(n)'      targetID='prior' inputName='distribution' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'>Prior on RGSM root branches for partition s:$(n)</connect>
            <connect srcID='RGSMMeanPrior.s:$(n)'                   targetID='prior' inputName='distribution' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'>Prior on mean of RGSM for partition s:$(n)</connect>
            <connect srcID='RGSMStdDevPrior.s:$(n)'                 targetID='prior' inputName='distribution' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'>Prior on stddev of RGSM for partition s:$(n)</connect>
            <connect srcID='RGSMPropInvariantPrior.s:$(n)'          targetID='prior' inputName='distribution' if='inlikelihood(RGSMproportionInvariant.s:$(n)) and RGSMproportionInvariant.s:$(n)/estimate=true'>Prior on proportion invariant for partition s:$(n)</connect>

            <connect srcID='RGSMproportionInvariantScaler.s:$(n)'   targetID='mcmc' inputName='operator' if='inlikelihood(RGSMproportionInvariant.s:$(n)) and RGSMproportionInvariant.s:$(n)/estimate=true'>Scales proportion of invariant sites parameter of partition $(n)</connect>
            <connect srcID='RGSMmutationRateScaler.s:$(n)'          targetID='mcmc' inputName='operator' if='nooperator(FixMeanMutationRatesOperator) and inlikelihood(RGSMmutationRate.s:$(n)) and RGSMmutationRate.s:$(n)/estimate=true'>Scales mutation rate of partition s:$(n)</connect>
            <connect srcID='RGSMucldMeanGammaScaler.s:$(n)'         targetID='mcmc' inputName='operator' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>
            <connect srcID='RGSMucldStdevGammaScaler.s:$(n)'        targetID='mcmc' inputName='operator' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>
            <connect srcID='RGSMCategoriesRandomWalkGamma.s:$(n)'   targetID='mcmc' inputName='operator' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>
            <connect srcID='RGSMCategoriesSwapGammaOperator.s:$(n)' targetID='mcmc' inputName='operator' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>
            <connect srcID='RGSMCategoriesUniformGamma.s:$(n)'      targetID='mcmc' inputName='operator' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>

            <connect srcID='RGSMproportionInvariant.s:$(n)'         targetID='tracelog' inputName='log' if='inposterior(RGSMproportionInvariant.s:$(n)) and RGSMproportionInvariant.s:$(n)/estimate=true'/>
            <connect srcID='RGSMmutationRate.s:$(n)'                targetID='tracelog' inputName='log' if='inlikelihood(RGSMmutationRate.s:$(n)) and RGSMmutationRate.s:$(n)/estimate=true'/>
            <connect srcID='RGSMgammaShape.s:$(n)'                  targetID='tracelog' inputName='log' if='inlikelihood(RGSMgammaShape.s:$(n)) and RGSMgammaShape.s:$(n)/estimate=true'/>
            <connect srcID='RGSMucldMeanGamma.s:$(n)'               targetID='tracelog' inputName='log' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>
            <connect srcID='RGSMucldStdevGamma.s:$(n)'              targetID='tracelog' inputName='log' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>

            <connect srcID='RelaxedGammaSiteModel.s:$(n)'              targetID='TreeWithMetaDataLogger.t:$(n)' inputName='metadata' if='inlikelihood(RelaxedGammaSiteModel.s:$(n))'/>

        </subtemplate>
        
        </mergewith>
</beast>
